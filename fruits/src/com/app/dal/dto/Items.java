/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.app.dal.dto;

import com.app.dal.dao.*;
import com.app.dal.factory.*;
import com.app.dal.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class Items implements Serializable
{
	/** 
	 * This attribute maps to the column id in the items table.
	 */
	protected int id;

	/** 
	 * This attribute maps to the column name in the items table.
	 */
	protected String name;

	/** 
	 * This attribute maps to the column quantity in the items table.
	 */
	protected double quantity;

	/** 
	 * This attribute represents whether the primitive attribute quantity is null.
	 */
	protected boolean quantityNull = true;

	/** 
	 * This attribute maps to the column stock_id in the items table.
	 */
	protected int stockId;

	/** 
	 * This attribute represents whether the primitive attribute stockId is null.
	 */
	protected boolean stockIdNull = true;

	/** 
	 * This attribute maps to the column code in the items table.
	 */
	protected String code;

	/** 
	 * This attribute maps to the column price in the items table.
	 */
	protected double price;

	/** 
	 * This attribute represents whether the primitive attribute price is null.
	 */
	protected boolean priceNull = true;

	/** 
	 * This attribute maps to the column type in the items table.
	 */
	protected String type;

	/**
	 * Method 'Items'
	 * 
	 */
	public Items()
	{
	}

	/**
	 * Method 'getId'
	 * 
	 * @return int
	 */
	public int getId()
	{
		return id;
	}

	/**
	 * Method 'setId'
	 * 
	 * @param id
	 */
	public void setId(int id)
	{
		this.id = id;
	}

	/**
	 * Method 'getName'
	 * 
	 * @return String
	 */
	public String getName()
	{
		return name;
	}

	/**
	 * Method 'setName'
	 * 
	 * @param name
	 */
	public void setName(String name)
	{
		this.name = name;
	}

	/**
	 * Method 'getQuantity'
	 * 
	 * @return double
	 */
	public double getQuantity()
	{
		return quantity;
	}

	/**
	 * Method 'setQuantity'
	 * 
	 * @param quantity
	 */
	public void setQuantity(double quantity)
	{
		this.quantity = quantity;
		this.quantityNull = false;
	}

	/**
	 * Method 'setQuantityNull'
	 * 
	 * @param value
	 */
	public void setQuantityNull(boolean value)
	{
		this.quantityNull = value;
	}

	/**
	 * Method 'isQuantityNull'
	 * 
	 * @return boolean
	 */
	public boolean isQuantityNull()
	{
		return quantityNull;
	}

	/**
	 * Method 'getStockId'
	 * 
	 * @return int
	 */
	public int getStockId()
	{
		return stockId;
	}

	/**
	 * Method 'setStockId'
	 * 
	 * @param stockId
	 */
	public void setStockId(int stockId)
	{
		this.stockId = stockId;
		this.stockIdNull = false;
	}

	/**
	 * Method 'setStockIdNull'
	 * 
	 * @param value
	 */
	public void setStockIdNull(boolean value)
	{
		this.stockIdNull = value;
	}

	/**
	 * Method 'isStockIdNull'
	 * 
	 * @return boolean
	 */
	public boolean isStockIdNull()
	{
		return stockIdNull;
	}

	/**
	 * Method 'getCode'
	 * 
	 * @return String
	 */
	public String getCode()
	{
		return code;
	}

	/**
	 * Method 'setCode'
	 * 
	 * @param code
	 */
	public void setCode(String code)
	{
		this.code = code;
	}

	/**
	 * Method 'getPrice'
	 * 
	 * @return double
	 */
	public double getPrice()
	{
		return price;
	}

	/**
	 * Method 'setPrice'
	 * 
	 * @param price
	 */
	public void setPrice(double price)
	{
		this.price = price;
		this.priceNull = false;
	}

	/**
	 * Method 'setPriceNull'
	 * 
	 * @param value
	 */
	public void setPriceNull(boolean value)
	{
		this.priceNull = value;
	}

	/**
	 * Method 'isPriceNull'
	 * 
	 * @return boolean
	 */
	public boolean isPriceNull()
	{
		return priceNull;
	}

	/**
	 * Method 'getType'
	 * 
	 * @return String
	 */
	public String getType()
	{
		return type;
	}

	/**
	 * Method 'setType'
	 * 
	 * @param type
	 */
	public void setType(String type)
	{
		this.type = type;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof Items)) {
			return false;
		}
		
		final Items _cast = (Items) _other;
		if (id != _cast.id) {
			return false;
		}
		
		if (name == null ? _cast.name != name : !name.equals( _cast.name )) {
			return false;
		}
		
		if (quantity != _cast.quantity) {
			return false;
		}
		
		if (quantityNull != _cast.quantityNull) {
			return false;
		}
		
		if (stockId != _cast.stockId) {
			return false;
		}
		
		if (stockIdNull != _cast.stockIdNull) {
			return false;
		}
		
		if (code == null ? _cast.code != code : !code.equals( _cast.code )) {
			return false;
		}
		
		if (price != _cast.price) {
			return false;
		}
		
		if (priceNull != _cast.priceNull) {
			return false;
		}
		
		if (type == null ? _cast.type != type : !type.equals( _cast.type )) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + id;
		if (name != null) {
			_hashCode = 29 * _hashCode + name.hashCode();
		}
		
		long temp_quantity = Double.doubleToLongBits(quantity);
		_hashCode = 29 * _hashCode + (int) (temp_quantity ^ (temp_quantity >>> 32));
		_hashCode = 29 * _hashCode + (quantityNull ? 1 : 0);
		_hashCode = 29 * _hashCode + stockId;
		_hashCode = 29 * _hashCode + (stockIdNull ? 1 : 0);
		if (code != null) {
			_hashCode = 29 * _hashCode + code.hashCode();
		}
		
		long temp_price = Double.doubleToLongBits(price);
		_hashCode = 29 * _hashCode + (int) (temp_price ^ (temp_price >>> 32));
		_hashCode = 29 * _hashCode + (priceNull ? 1 : 0);
		if (type != null) {
			_hashCode = 29 * _hashCode + type.hashCode();
		}
		
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return ItemsPk
	 */
	public ItemsPk createPk()
	{
		return new ItemsPk(id);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.app.dal.dto.Items: " );
		ret.append( "id=" + id );
		ret.append( ", name=" + name );
		ret.append( ", quantity=" + quantity );
		ret.append( ", stockId=" + stockId );
		ret.append( ", code=" + code );
		ret.append( ", price=" + price );
		ret.append( ", type=" + type );
		return ret.toString();
	}

}
