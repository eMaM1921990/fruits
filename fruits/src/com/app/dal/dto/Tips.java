/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.app.dal.dto;

import com.app.dal.dao.*;
import com.app.dal.factory.*;
import com.app.dal.exceptions.*;
import java.io.Serializable;
import java.util.*;

public class Tips implements Serializable
{
	/** 
	 * This attribute maps to the column id in the tips table.
	 */
	protected int id;

	/** 
	 * This attribute maps to the column bp_id in the tips table.
	 */
	protected int bpId;

	/** 
	 * This attribute represents whether the primitive attribute bpId is null.
	 */
	protected boolean bpIdNull = true;

	/** 
	 * This attribute maps to the column amount_type in the tips table.
	 */
	protected String amountType;

	/** 
	 * This attribute maps to the column item_name in the tips table.
	 */
	protected String itemName;

	/** 
	 * This attribute maps to the column tips_type in the tips table.
	 */
	protected String tipsType;

	/** 
	 * This attribute maps to the column worth in the tips table.
	 */
	protected double worth;

	/** 
	 * This attribute represents whether the primitive attribute worth is null.
	 */
	protected boolean worthNull = true;

	/**
	 * Method 'Tips'
	 * 
	 */
	public Tips()
	{
	}

	/**
	 * Method 'getId'
	 * 
	 * @return int
	 */
	public int getId()
	{
		return id;
	}

	/**
	 * Method 'setId'
	 * 
	 * @param id
	 */
	public void setId(int id)
	{
		this.id = id;
	}

	/**
	 * Method 'getBpId'
	 * 
	 * @return int
	 */
	public int getBpId()
	{
		return bpId;
	}

	/**
	 * Method 'setBpId'
	 * 
	 * @param bpId
	 */
	public void setBpId(int bpId)
	{
		this.bpId = bpId;
		this.bpIdNull = false;
	}

	/**
	 * Method 'setBpIdNull'
	 * 
	 * @param value
	 */
	public void setBpIdNull(boolean value)
	{
		this.bpIdNull = value;
	}

	/**
	 * Method 'isBpIdNull'
	 * 
	 * @return boolean
	 */
	public boolean isBpIdNull()
	{
		return bpIdNull;
	}

	/**
	 * Method 'getAmountType'
	 * 
	 * @return String
	 */
	public String getAmountType()
	{
		return amountType;
	}

	/**
	 * Method 'setAmountType'
	 * 
	 * @param amountType
	 */
	public void setAmountType(String amountType)
	{
		this.amountType = amountType;
	}

	/**
	 * Method 'getItemName'
	 * 
	 * @return String
	 */
	public String getItemName()
	{
		return itemName;
	}

	/**
	 * Method 'setItemName'
	 * 
	 * @param itemName
	 */
	public void setItemName(String itemName)
	{
		this.itemName = itemName;
	}

	/**
	 * Method 'getTipsType'
	 * 
	 * @return String
	 */
	public String getTipsType()
	{
		return tipsType;
	}

	/**
	 * Method 'setTipsType'
	 * 
	 * @param tipsType
	 */
	public void setTipsType(String tipsType)
	{
		this.tipsType = tipsType;
	}

	/**
	 * Method 'getWorth'
	 * 
	 * @return double
	 */
	public double getWorth()
	{
		return worth;
	}

	/**
	 * Method 'setWorth'
	 * 
	 * @param worth
	 */
	public void setWorth(double worth)
	{
		this.worth = worth;
		this.worthNull = false;
	}

	/**
	 * Method 'setWorthNull'
	 * 
	 * @param value
	 */
	public void setWorthNull(boolean value)
	{
		this.worthNull = value;
	}

	/**
	 * Method 'isWorthNull'
	 * 
	 * @return boolean
	 */
	public boolean isWorthNull()
	{
		return worthNull;
	}

	/**
	 * Method 'equals'
	 * 
	 * @param _other
	 * @return boolean
	 */
	public boolean equals(Object _other)
	{
		if (_other == null) {
			return false;
		}
		
		if (_other == this) {
			return true;
		}
		
		if (!(_other instanceof Tips)) {
			return false;
		}
		
		final Tips _cast = (Tips) _other;
		if (id != _cast.id) {
			return false;
		}
		
		if (bpId != _cast.bpId) {
			return false;
		}
		
		if (bpIdNull != _cast.bpIdNull) {
			return false;
		}
		
		if (amountType == null ? _cast.amountType != amountType : !amountType.equals( _cast.amountType )) {
			return false;
		}
		
		if (itemName == null ? _cast.itemName != itemName : !itemName.equals( _cast.itemName )) {
			return false;
		}
		
		if (tipsType == null ? _cast.tipsType != tipsType : !tipsType.equals( _cast.tipsType )) {
			return false;
		}
		
		if (worth != _cast.worth) {
			return false;
		}
		
		if (worthNull != _cast.worthNull) {
			return false;
		}
		
		return true;
	}

	/**
	 * Method 'hashCode'
	 * 
	 * @return int
	 */
	public int hashCode()
	{
		int _hashCode = 0;
		_hashCode = 29 * _hashCode + id;
		_hashCode = 29 * _hashCode + bpId;
		_hashCode = 29 * _hashCode + (bpIdNull ? 1 : 0);
		if (amountType != null) {
			_hashCode = 29 * _hashCode + amountType.hashCode();
		}
		
		if (itemName != null) {
			_hashCode = 29 * _hashCode + itemName.hashCode();
		}
		
		if (tipsType != null) {
			_hashCode = 29 * _hashCode + tipsType.hashCode();
		}
		
		long temp_worth = Double.doubleToLongBits(worth);
		_hashCode = 29 * _hashCode + (int) (temp_worth ^ (temp_worth >>> 32));
		_hashCode = 29 * _hashCode + (worthNull ? 1 : 0);
		return _hashCode;
	}

	/**
	 * Method 'createPk'
	 * 
	 * @return TipsPk
	 */
	public TipsPk createPk()
	{
		return new TipsPk(id);
	}

	/**
	 * Method 'toString'
	 * 
	 * @return String
	 */
	public String toString()
	{
		StringBuffer ret = new StringBuffer();
		ret.append( "com.app.dal.dto.Tips: " );
		ret.append( "id=" + id );
		ret.append( ", bpId=" + bpId );
		ret.append( ", amountType=" + amountType );
		ret.append( ", itemName=" + itemName );
		ret.append( ", tipsType=" + tipsType );
		ret.append( ", worth=" + worth );
		return ret.toString();
	}

}
