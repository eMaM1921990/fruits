/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.app.dal.dao;

import java.util.Date;
import com.app.dal.dto.*;
import com.app.dal.exceptions.*;

public interface InvoiceVwDao
{
	/** 
	 * Returns all rows from the invoice_vw table that match the criteria ''.
	 */
	public InvoiceVw[] findAll() throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'date = :date'.
	 */
	public InvoiceVw[] findWhereDateEquals(Date date) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'bp_id = :bpId'.
	 */
	public InvoiceVw[] findWhereBpIdEquals(int bpId) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'is_trx = :isTrx'.
	 */
	public InvoiceVw[] findWhereIsTrxEquals(short isTrx) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'id = :id'.
	 */
	public InvoiceVw[] findWhereIdEquals(int id) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'price = :price'.
	 */
	public InvoiceVw[] findWherePriceEquals(double price) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'quantity = :quantity'.
	 */
	public InvoiceVw[] findWhereQuantityEquals(double quantity) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'name = :name'.
	 */
	public InvoiceVw[] findWhereNameEquals(String name) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the criteria 'invoice_id = :invoiceId'.
	 */
	public InvoiceVw[] findWhereInvoiceIdEquals(int invoiceId) throws InvoiceVwDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the invoice_vw table that match the specified arbitrary SQL statement
	 */
	public InvoiceVw[] findByDynamicSelect(String sql, Object[] sqlParams) throws InvoiceVwDaoException;

	/** 
	 * Returns all rows from the invoice_vw table that match the specified arbitrary SQL statement
	 */
	public InvoiceVw[] findByDynamicWhere(String sql, Object[] sqlParams) throws InvoiceVwDaoException;

}
