/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.app.dal.dao;

import java.util.Date;
import com.app.dal.dto.*;
import com.app.dal.exceptions.*;

public interface TrayVwDao
{
	/** 
	 * Returns all rows from the tray_vw table that match the criteria ''.
	 */
	public TrayVw[] findAll() throws TrayVwDaoException;

	/** 
	 * Returns all rows from the tray_vw table that match the criteria 'created_at = :createdAt'.
	 */
	public TrayVw[] findWhereCreatedAtEquals(Date createdAt) throws TrayVwDaoException;

	/** 
	 * Returns all rows from the tray_vw table that match the criteria 'number_of_tray = :numberOfTray'.
	 */
	public TrayVw[] findWhereNumberOfTrayEquals(int numberOfTray) throws TrayVwDaoException;

	/** 
	 * Returns all rows from the tray_vw table that match the criteria 'name = :name'.
	 */
	public TrayVw[] findWhereNameEquals(String name) throws TrayVwDaoException;

	/** 
	 * Returns all rows from the tray_vw table that match the criteria 'bp_name = :bpName'.
	 */
	public TrayVw[] findWhereBpNameEquals(String bpName) throws TrayVwDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the tray_vw table that match the specified arbitrary SQL statement
	 */
	public TrayVw[] findByDynamicSelect(String sql, Object[] sqlParams) throws TrayVwDaoException;

	/** 
	 * Returns all rows from the tray_vw table that match the specified arbitrary SQL statement
	 */
	public TrayVw[] findByDynamicWhere(String sql, Object[] sqlParams) throws TrayVwDaoException;

}
